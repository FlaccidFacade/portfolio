# This workflow updates the build status and version badges in README.md
# Triggers:
# - After CI workflow completes (success or failure)
# - When the version file is updated on main

name: Update README Badges

concurrency:
  group: update-badges-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write

on:
  workflow_run:
    workflows: ["CI"]
    types: [completed]
    branches: [main]
  push:
    paths: ['version']
    branches: [main]

jobs:
  update-badges:
    runs-on: ubuntu-22.04
    # Only push badge updates from the canonical repo (avoid forks trying to push)
    if: ${{ github.repository == 'FlaccidFacade/portfolio' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Read version from file
        id: version
        run: |
          VERSION=$(cat version | tr -d '\n' | xargs)
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Version: $VERSION"

      - name: Determine build status (workflow_run only)
        id: build_status
        run: |
          if [ "${{ github.event_name }}" = "workflow_run" ]; then
            case "${{ github.event.workflow_run.conclusion }}" in
              success)
                echo "status=passing" >> $GITHUB_OUTPUT
                echo "color=brightgreen" >> $GITHUB_OUTPUT ;;
              cancelled)
                echo "status=cancelled" >> $GITHUB_OUTPUT
                echo "color=yellow" >> $GITHUB_OUTPUT ;;
              skipped|neutral)
                echo "status=skipped" >> $GITHUB_OUTPUT
                echo "color=lightgrey" >> $GITHUB_OUTPUT ;;
              failure|timed_out|action_required|*)
                echo "status=failing" >> $GITHUB_OUTPUT
                echo "color=red" >> $GITHUB_OUTPUT ;;
            esac
            echo "update_build=true" >> $GITHUB_OUTPUT
          else
            # For version bump pushes, don't touch the build badge â€” only update version
            echo "update_build=false" >> $GITHUB_OUTPUT
          fi

      - name: Update README build badge
        if: ${{ steps.build_status.outputs.update_build == 'true' }}
        run: |
          BUILD_STATUS="${{ steps.build_status.outputs.status }}"
          BUILD_COLOR="${{ steps.build_status.outputs.color }}"
          README_FILE="README.md"
          BUILD_BADGE_URL="https://img.shields.io/badge/build-${BUILD_STATUS}-${BUILD_COLOR}"

          if grep -q '!\[Build Status\](' "$README_FILE"; then
            sed -i "s|!\[Build Status\](https://img.shields.io/[^)]*)|![Build Status](${BUILD_BADGE_URL})|" "$README_FILE"
          else
            echo -e "\n![Build Status](${BUILD_BADGE_URL})" >> "$README_FILE"
          fi

      - name: Update README version badge
        run: |
          VERSION="${{ steps.version.outputs.version }}"
          README_FILE="README.md"
          VERSION_BADGE_URL="https://img.shields.io/badge/version-${VERSION}-blue"

          if grep -q '!\[Version\](' "$README_FILE"; then
            sed -i "s|!\[Version\](https://img.shields.io/[^)]*)|![Version](${VERSION_BADGE_URL})|" "$README_FILE"
          else
            echo -e "\n![Version](${VERSION_BADGE_URL})" >> "$README_FILE"
          fi

      - name: Commit and push changes
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add README.md
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Update README badges (build/version)"
            git push
          fi
