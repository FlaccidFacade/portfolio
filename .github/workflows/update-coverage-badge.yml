name: Update README Coverage Badge

permissions:
  contents: write  # Grants permission to push changes

on:
  workflow_run:
    workflows: ["CI"]
    types:
      - completed
    branches:
      - main

jobs:
  update-readme:
    runs-on: ubuntu-22.04
    # Only push badge updates from the canonical repo (avoid forks trying to push)
    if: ${{ github.event.workflow_run.conclusion == 'success' && github.repository == 'FlaccidFacade/portfolio' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download coverage artifact
        uses: dawidd6/action-download-artifact@v11
        with:
          name: coverage-report
          path: ./coverage
          github_token: ${{ secrets.GITHUB_TOKEN }}
          workflow: ci.yml
          workflow_conclusion: success
          
      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Compute total coverage
        id: coverage
        run: |
          COVERAGE=$(jq '
            [.[] | .s | to_entries[]] |
            map(.value) as $counts |
            ($counts | map(select(.>0)) | length) / ($counts | length) * 100
          ' ./coverage/coverage-final.json)
          COVERAGE_ROUNDED=$(printf "%.0f" $COVERAGE)
          echo "Coverage: $COVERAGE_ROUNDED%"
          echo "coverage=$COVERAGE_ROUNDED" >> $GITHUB_OUTPUT

      - name: Update README badge
        run: |
          BADGE_URL="https://img.shields.io/badge/Coverage-${{ steps.coverage.outputs.coverage }}%25-brightgreen"
          README_FILE="README.md"
          
          # Replace the existing coverage badge line or add if missing
          if grep -q 'https://img.shields.io/badge/Coverage' "$README_FILE"; then
            sed -i "s|https://img.shields.io/badge/Coverage.*|$BADGE_URL|" "$README_FILE"
          else
            echo -e "\n![Coverage]($BADGE_URL)" >> "$README_FILE"
          fi

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Create PR with coverage update
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          BRANCH_NAME="update-coverage-badge-$(date +%H%M%S)"
          COVERAGE="${{ steps.coverage.outputs.coverage }}"
          
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          
          # Create and switch to new branch
          git checkout -b "$BRANCH_NAME"
          git add README.md
          
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Update coverage badge to ${COVERAGE}%"
            git push origin "$BRANCH_NAME"
            
            # Create PR with auto-merge
            gh pr create \
              --title "Update coverage badge to ${COVERAGE}%" \
              --body "Automated update of coverage badge based on latest CI run." \
              --base main \
              --head "$BRANCH_NAME"
            
            # Enable auto-merge
            gh pr merge "$BRANCH_NAME" --auto --squash
          fi
